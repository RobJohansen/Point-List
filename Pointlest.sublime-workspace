{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"toggle",
				"toggleClass"
			],
			[
				"X",
				"X"
			],
			[
				"margin",
				"margin-bottom"
			],
			[
				"fa-",
				"fa-refresh"
			],
			[
				"re",
				"response"
			],
			[
				"form_",
				"form_name"
			],
			[
				"get_p",
				"get_points_bw"
			],
			[
				"font",
				"font-weight"
			],
			[
				"te",
				"text-align"
			],
			[
				"inl",
				"inline-block"
			],
			[
				"text",
				"text-decoration"
			]
		]
	},
	"buffers":
	[
		{
			"file": "templates/home.html",
			"settings":
			{
				"buffer_size": 3405,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/row.html",
			"settings":
			{
				"buffer_size": 1398,
				"line_ending": "Windows"
			}
		},
		{
			"file": "templates/group.html",
			"settings":
			{
				"buffer_size": 857,
				"line_ending": "Windows"
			}
		},
		{
			"file": "styles/main.css",
			"settings":
			{
				"buffer_size": 1396,
				"line_ending": "Windows"
			}
		},
		{
			"file": "scripts/main.js",
			"settings":
			{
				"buffer_size": 7931,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "from webapp2 import RequestHandler, uri_for\n\nimport jinja2\nimport models\nimport os\nimport logging\n\nJ_ENV = jinja2.Environment(loader=jinja2.FileSystemLoader(os.path.dirname(__file__)))\n\n\ndef render_to_string(filename, context):\n    template = J_ENV.get_template('templates/' + filename)\n    return template.render(context)\n\n\ndef render_with_context(self, filename, context):\n    context.update({\n        'auth_user' : models.current_account(),\n        'auth_url'  : models.logout_url(self.request.uri)\n    })\n\n    template = J_ENV.get_template('templates/' + filename)\n    self.response.out.write(template.render(context))\n\n\ndef json_response(self, context):\n    import json\n    self.response.headers['Content-Type'] = 'application/json'\n    self.response.out.write(json.dumps(context))\n\n\nclass Home(RequestHandler):\n    def get(self):\n        from operator import attrgetter\n\n        schemes = []\n        for s in models.Scheme.query():\n            if s.memberships.count() == 0:\n                schemes.append(s)\n\n\n\n\n        ms = sorted(schemes, key=attrgetter('name'))\n\n        f = lambda xs: dict(map(lambda x: (x.key.id(), x), xs))\n\n        xs = f(models.Membership.query())\n        xs.update(f(models.Group.query()))\n\n        rs = filter(lambda x: x is not None, map(lambda i: xs.get(i), models.current_account().order))\n\n\n\n\n        context = {\n            'ms'        : ms,\n            'rs'        : rs\n        }\n\n        render_with_context(self, 'home.html', context)\n\n\nclass Add(RequestHandler):\n    def post(self):\n        k = long(self.request.get('key'))\n        s = models.Scheme.get_by_id(k)\n\n        m = models.Membership()\n        m.scheme = s.key\n        m.put()\n\n        context = {\n            'row'       : render_to_string('row.html', { 'r' : m })\n        }\n\n        json_response(self, context)\n\n\nclass Remove(RequestHandler):\n    def post(self):\n        k = long(self.request.get('key'))\n        m = models.Membership.get_by_id(k)\n\n        m.key.delete()\n\n        context = { }\n\n        json_response(self, context)\n\n\nclass Update(RequestHandler):\n    def get(self):\n        k = long(self.request.get('key'))\n        m = models.Membership.get_by_id(k)\n\n        from getters import updater\n        rs = updater(self, m)\n\n        context = {}\n\n        if rs.get('success'):\n            m.content = unicode(rs.get('content'))\n            m.put()\n\n            s = models.Status(membership=m)\n            s.points = unicode(rs.get('points').replace(',', '').strip())\n            s.put()\n\n            context = {\n                'points'    : s.points,\n                'content'   : m.content\n            }\n\n        context.update({\n            'success'   : rs.get('success')\n        })\n        \n        json_response(self, context)\n\n\nclass Save(RequestHandler):\n    def post(self):\n        k = long(self.request.get('key'))\n        m = models.Membership().get_by_id(k)\n\n        m.name = self.request.get('name')\n        m.username = self.request.get('username')\n        m.password = self.request.get('password')\n        m.put()\n\n        context = {\n            'name'      : m.name\n        }\n        \n        json_response(self, context)\n\n\nclass Order(RequestHandler):\n    def post(self):\n        k = self.request.get('keys')\n\n        logging.info()\n\n        xs = map(long, k.split(','))\n\n        \n\n        #map(models.Group.get_by_id, xs), map(models.Membership.get_by_id, xs)\n\n        #a = models.current_account()\n        #a.order = \n        #a.put()\n\n\nclass Do(RequestHandler):\n    def get(self):\n        self.response.out.write('Done')",
			"file": "views.py",
			"file_size": 3536,
			"file_write_time": 130361821603432513,
			"settings":
			{
				"buffer_size": 3560,
				"line_ending": "Unix"
			}
		},
		{
			"file": "models.py",
			"settings":
			{
				"buffer_size": 2924,
				"line_ending": "Windows"
			}
		},
		{
			"file": "getters.py",
			"settings":
			{
				"buffer_size": 4572,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"command_palette":
	{
		"height": 392.0,
		"selected_items":
		[
		],
		"width": 392.0
	},
	"console":
	{
		"height": 0.0,
		"history":
		[
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"file_history":
	[
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/templates/home.html",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/templates/group.html",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/models.py",
		"/C/Users/Rob/Downloads/Highcharts-3.0.9/examples/line-basic/index.htm",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/getters.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/scripts/main - Copy.js",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/urls.py",
		"/C/Users/Rob/Desktop/Point-List/views.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/templates/home - Copy.html",
		"/C/Program Files (x86)/Google/google_appengine/google/appengine/ext/db/__init__.py",
		"/C/Program Files (x86)/Google/google_appengine/google/appengine/ext/db/polymodel.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/scripts/main.js",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/styles/main.css",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/app.yaml",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/stylesheets/main.css",
		"/C/Users/Rob/SkyDrive/Documents/Office/IISExpress/config/applicationhost.config",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Point-List/mechanize/_msiecookiejar.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/templates/loyalties.html",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/mechanize/__init__.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/mechanize/_html.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/mechanize/_msiecookiejar.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/mechanize/_urllib2_fork.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/mechanize/_mechanize.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/mechanize/_auth.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/app.yaml",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/scripts/main.js",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/templates/home.html",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/models.py~RF34402371.TMP",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/models.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/urls.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/dryscrape/mixins.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Pointlest/dryscrape/__init__.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Tilde/models.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Tilde/urls.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Tilde/views.py",
		"/C/Users/Rob/SkyDrive/Documents/University/Year 4/G54CCS/Coursework/myapp/views.py",
		"/C/Users/Rob/SkyDrive/Documents/Projects/Web/Tilde/templates/home.html"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			""
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"key()",
			"all",
			"db",
			"g.",
			"m.",
			"order",
			"class Model",
			"def model",
			"model",
			"Member",
			"all",
			"verbose",
			"verbose_name",
			"verbos",
			"Beaut",
			"fa-arrows-v",
			"urllib2.urlopen",
			"urllib2.open",
			"open",
			"urllib2.urlopen",
			"_winreg",
			"'",
			"HTMLForm",
			"select_form",
			"follow_link",
			"_winreg",
			"uri_for"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"key",
			"ndb",
			"fa-bars",
			"\""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 5,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "templates/home.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3405,
						"regions":
						{
						},
						"selection":
						[
							[
								2173,
								2173
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 795.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "templates/row.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1398,
						"regions":
						{
						},
						"selection":
						[
							[
								91,
								91
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "templates/group.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 857,
						"regions":
						{
						},
						"selection":
						[
							[
								647,
								647
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "styles/main.css",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1396,
						"regions":
						{
						},
						"selection":
						[
							[
								727,
								727
							]
						],
						"settings":
						{
							"syntax": "Packages/CSS/CSS.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 585.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "scripts/main.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 7931,
						"regions":
						{
						},
						"selection":
						[
							[
								2585,
								2585
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1440.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "views.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3560,
						"regions":
						{
						},
						"selection":
						[
							[
								3246,
								3246
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1755.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "models.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2924,
						"regions":
						{
						},
						"selection":
						[
							[
								1945,
								1945
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "getters.py",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 4572,
						"regions":
						{
						},
						"selection":
						[
							[
								4393,
								4393
							]
						],
						"settings":
						{
							"syntax": "Packages/Python/Python.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": -0.0,
						"translation.y": 2462.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 23.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"project": "Pointlest.sublime-project",
	"replace":
	{
		"height": 62.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 500.0,
		"selected_items":
		[
			[
				"",
				"C:\\Users\\Rob\\SkyDrive\\Documents\\Projects\\Web\\Tilde\\Tilde.sublime-project"
			]
		],
		"width": 380.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"selected_items":
		[
		],
		"width": 0.0
	},
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 174.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
